properties 
	# Application URL
    # development 
    APPLICATION_BASE_URL http://localhost:8080/
    # production
    #APPLICATION_BASE_URL http://www.figgo.com.br/
    
    # Figgo properties
    # Used in test env to indicate admin manager to not use Route53
    # for production environment, just comment the line bellow
    NOT_USE_ROUTE53	true
    # Authorization Domain - to be used by google authentication
    AUTHORIZATION_DOMAIN figgo.com.br
    
dependencies
	# Dependencies should be declared before any class instantiation, it means,
	# before interceptors, bootloaders and controllers block 
	# maps dependencies (interface -> implementation)
    br.octahedron.cotopaxi.eventbus.EventPublisher br.octahedron.cotopaxi.eventbus.AppEngineEventPublisher
    br.octahedron.cotopaxi.datastore.namespace.NamespaceManager br.octahedron.cotopaxi.datastore.namespace.AppEngineNamespaceManager

interceptors
    # Controller Interceptors
  	# Controller interceptors should be declared in execution order
    br.octahedron.figgo.modules.users.controller.AuthenticationInterceptor
    br.octahedron.figgo.modules.authorization.controller.AuthorizationInterceptor
    br.octahedron.cotopaxi.datastore.namespace.SubdomainNamespaceInterceptor
	# Response Interceptors
    #br.octahedron.cotopaxi.view.GzipInterceptor
    br.octahedron.cotopaxi.datastore.jdo.PersistenceManagerInterceptor


bootloaders
	# Subscribers bootloader
	br.octahedron.figgo.SubscribersBootloader
    
controllers
	# Index controller
 	br.octahedron.figgo.IndexController
 		/		get		index
 	
 	# User controller
	br.octahedron.figgo.user.controller.UserController
    	/user/new			get		newUser
    	/user/new			post	createUser
    	/user/edit			get		editUser
    	/user/edit			post	updateUser
    	/user/search/{term}	get		searchUser
    	/dashboard			get		dashboardUser
    
    # Admin controller
    br.octahedron.figgo.admin.controller.AdminController
    	/admin/config	get		appConfig
    	/admin/config	post	appConfig
    	/domain/new		get		newDomain
    	/domain/new		post	createDomain
    
    # Authorization controller
	br.octahedron.figgo.modules.authorization.controller.AuthorizationController
    	/domain/roles			get		listRoles
    	/domain/users			get		listUsers
    	/domain/user/edit		get		editUserRoles
    	/domain/user/role/add	post	addUserRole
    	/domain/user/role/del	post	removeUserRole
    	/domain/user/remove		post	removeUserRoles
    	
    # Upload controller
	br.octahedron.figgo.modules.upload.controller.UploadController
    	/serve/{key}		get		serveBlob
    	/user/upload		get		userUpload
    	/user/upload		post	userUpload
    	/domain/upload		get		domainUpload
    	/domain/upload		post	domainUpload
	
	# Domain/Configuration controller
	br.octahedron.figgo.modules.configuration.controller.ConfigurationController
    	/domain/edit			get		editDomain
    	/domain/edit			post	updateDomain
    	/domain/list			get		listDomain
    	/domain/module/{module}	get		moduleDomain
    	/domain/module/{module}	post	moduleDomain
   
	# Bank controller  	
  	br.octahedron.figgo.modules.bank.controller.BankController
    	/bank			get		indexBank
    	/bank/transfer	get		transferBank
    	/bank/transfer	post	transferBank
    	/bank/statement	get		statementBank
    	/bank/statement	post	transactionsBank
    	/bank/admin		get		adminBank
    	/bank/share		post	shareBank
    	/bank/ballast	post	ballastBank
    	
    # Services controller
	br.octahedron.figgo.modules.service.controller.ServiceController
    	/services							get		listServices
    	/service/new						get		newService
    	/service/new						post	createService
    	/service/{name}/edit				get		editService
    	/service/{name}/edit				post	updateService
    	/service/{name}/delete				post	removeService
    	/service/{name}/show				get		showService
    	/service/{name}/provider/new		post	addProvider
    	/service/{name}/provider/delete		post	removeProvider
		
		# refactor -> ServicesContractController
    	/services/contracts					get		showContracts
    	/services/contracts/history			get		showHistory
    	/services/contract/{id}/edit		get		editContract
    	/services/contract/{id}/edit		post	updateContract
    	/service/{name}/contract/{provider}	post	requestContract
